{
  "name": "hono-payment-service",
  "scripts": {
    "start": "wrangler dev",
    "lint": "eslint \"{src,test}/**/*.ts\" --fix",
    "format": "prettier --write \"{src,test}/**/*.{ts,js,json,md}\"",
    "lint:lint-staged": "lint-staged",
    "commit": "npx git-cz",
    "prepare": "husky",
    "cf-typegen": "wrangler types --env-interface CloudflareBindings src/types/worker-configuration.d.ts",
    "build": "echo 'No build step needed for this project.'",
    "test": "DEBUG=miniflare* npx vitest run",
    "test:coverage": "vitest run --coverage",
    "db:up": "drizzle-kit up",
    "debug:development": "wrangler dev --env development",
    "debug:staging": "wrangler dev --env staging",
    "debug:production": "wrangler dev --env production",
    "remote:development": "wrangler dev --env development --remote",
    "remote:staing": "wrangler dev --env staging --remote",
    "remote:production": "wrangler dev --env production --remote",
    "deploy:development": "wrangler deploy --minify src/index.ts --var COMMIT_SHA:$(git rev-parse --short HEAD) BUILD_DATE:$(date +%Y-%m-%dT%H:%M:%S) --env development",
    "deploy:staging": "wrangler deploy --minify src/index.ts --var COMMIT_SHA:$(git rev-parse --short HEAD) BUILD_DATE:$(date +%Y-%m-%dT%H:%M:%S) --env staging",
    "deploy:production": "wrangler deploy --minify src/index.ts --var COMMIT_SHA:$(git rev-parse --short HEAD) BUILD_DATE:$(date +%Y-%m-%dT%H:%M:%S) --env production",
    "migration:gen": "drizzle-kit generate",
    "migration:apply:local": "wrangler d1 migrations apply hono-payment-service-d1-dev --local",
    "migration:apply:development": "wrangler d1 migrations apply hono-payment-service-d1-dev --env development --remote",
    "migration:apply:staging": "wrangler d1 migrations apply hono-payment-service-d1-stg --env staging --remote",
    "migration:apply:production": "wrangler d1 migrations apply hono-payment-service-d1-prod --env production --remote",
    "d1:create": "wrangler d1 create \"hono-payment-service-d1-dev\"",
    "d1:export:development": "wrangler d1 export DB --output=./.wrangler/tmp/d1/dev-data.sql --env development --remote",
    "d1:export:staging": "wrangler d1 export DB --output=./.wrangler/tmp/d1/stg-data.sql --env staging --remote",
    "d1:export:production": "wrangler d1 export DB --output=./.wrangler/tmp/d1/prod-data.sql --env production --remote",
    "d1:import:development": "wrangler d1 execute DB --file=./.wrangler/tmp/d1/dev-data.sql --env development",
    "d1:import:staging": "wrangler d1 execute DB --file=./.wrangler/tmp/d1/stg-data.sql --env staging",
    "d1:import:production": "wrangler d1 execute DB --file=./.wrangler/tmp/d1/prod-data.sql --env production",
    "r2:create": "wrangler r2 bucket create \"hono-payment-service-r2-dev\"",
    "secret:put": "wrangler secret put \"{secret_key}\"",
    "secret:put:development": "./set-secrets.sh ./secure_files/.development.vars development",
    "secret:put:staging": "./set-secrets.sh ./secure_files/.staging.vars staging",
    "secret:put:production": "./set-secrets.sh ./secure_files/.production.vars production",
    "kv:create:development": "wrangler kv:namespace create \"{kv_namespace}\" --env development",
    "kv:create:staging": "wrangler kv:namespace create \"{kv_namespace}\" --env staging",
    "kv:create:production": "wrangler kv:namespace create \"{kv_namespace}\" --env production",
    "kv:delete:development": "wrangler kv:namespace delete \"{kv_namespace}\" --env development",
    "kv:delete:staging": "wrangler kv:namespace delete \"{kv_namespace}\" --env staging",
    "kv:delete:production": "wrangler kv:namespace delete \"{kv_namespace}\" --env production",
    "kv:put:development": "wrangler kv:key put --binding=\"{kv_namespace}\" \"{kv_key}\" \"{kv_value}\" --env development",
    "kv:put:staging": "wrangler kv:key put --binding=\"{kv_namespace}\" \"{kv_key}\" \"{kv_value}\" --env staging",
    "kv:put:production": "wrangler kv:key put --binding=\"{kv_namespace}\" \"{kv_key}\" \"{kv_value}\" --env production"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
      "prettier --write"
    ],
    "{!(package)*.json,*.code-snippets,.!(browserslist)*rc}": [
      "prettier --write--parser json"
    ],
    "package.json": [
      "prettier --write"
    ],
    "*.md": [
      "prettier --write"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-git"
    }
  },
  "dependencies": {
    "@asteasolutions/zod-to-openapi": "7.1.1",
    "@hono/swagger-ui": "0.4.1",
    "@hono/zod-openapi": "0.16.0",
    "@hono/zod-validator": "0.2.2",
    "@lucia-auth/adapter-sqlite": "3.0.2",
    "@noble/hashes": "^1.4.0",
    "@paralleldrive/cuid2": "2.2.2",
    "arctic": "1.9.2",
    "axios": "^1.7.7",
    "base-x": "5.0.0",
    "bcryptjs": "^2.4.3",
    "csv-parse": "5.5.6",
    "csv-parser": "3.0.0",
    "drizzle-orm": "0.32.0",
    "drizzle-zod": "0.5.1",
    "hono": "4.5.0",
    "install": "^0.13.0",
    "lodash": "4.17.21",
    "lucia": "3.2.0",
    "moment": "2.30.1",
    "moment-timezone": "^0.5.46",
    "npm": "^10.9.2",
    "remix-auth-oauth2": "2.1.0",
    "stripe": "^17.4.0",
    "ulid-workers": "2.1.0",
    "uuid": "^10.0.0",
    "zod": "3.23.8"
  },
  "devDependencies": {
    "@cloudflare/vitest-pool-workers": "0.4.13",
    "@cloudflare/workers-types": "4.20240718.0",
    "@commitlint/cli": "^19.6.1",
    "@commitlint/config-conventional": "^19.6.0",
    "@nyxb/eslint-config": "3.0.11",
    "@total-typescript/ts-reset": "0.5.1",
    "@types/axios": "0.9.36",
    "@types/bcryptjs": "^2.4.6",
    "@types/lodash": "4.17.10",
    "@types/pica": "9.0.4",
    "@types/uuid": "10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.18.1",
    "@typescript-eslint/parser": "^8.18.1",
    "@vitest/coverage-istanbul": "1.5",
    "commitizen": "^4.3.1",
    "cz-git": "^1.11.0",
    "drizzle-kit": "^0.23.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^9.1.7",
    "lint-staged": "^15.2.11",
    "prettier": "^3.4.2",
    "vitest": "1.5",
    "wrangler": "3.65.1"
  }
}
