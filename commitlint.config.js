// eslint-disable-next-line @typescript-eslint/no-require-imports
const { defineConfig } = require('cz-git')

module.exports = defineConfig({
  // Commitlint rules
  extends: ['@commitlint/config-conventional'],
  rules: {
    'body-leading-blank': [2, 'always'], // Enforce a blank line after body
    'footer-leading-blank': [2, 'always'], // Enforce a blank line after footer
    'header-max-length': [2, 'always', 100], // Limit header length to 100
    'subject-empty': [2, 'never'], // Subject must not be empty
    'type-empty': [2, 'never'], // Type must not be empty
    'subject-case': [0], // Allow any case for the subject
    'type-enum': [
      2,
      'always',
      [
        'feat', // New feature
        'fix', // Bug fix
        'docs', // Documentation changes
        'style', // Code style changes
        'refactor', // Refactoring code
        'perf', // Performance improvements
        'test', // Adding tests
        'chore', // Other changes (e.g., tooling, CI/CD)
        'ci', // CI/CD related changes
        'build', // Build process changes
        'revert', // Reverting commits
      ],
    ],
    'footer-max-line-length': [2, 'always', 100], // Footer line length
  },
  ignores: [
    commit => commit.startsWith('Update wrangler.toml'), // Ignore autogenerated commits
  ],
  defaultIgnores: true,

  // cz-git Prompt Configuration
  prompt: {
    alias: { fd: 'docs: fix typos' },
    messages: {
      type: "Select the type of change that you're committing:",
      scope: 'Denote the SCOPE of this change (optional):',
      customScope: 'Denote the SCOPE of this change:',
      subject: 'Write a SHORT, IMPERATIVE tense description of the change:\n',
      body: 'Provide a LONGER description of the change (optional). Use "|" to break new line:\n',
      breaking: 'List any BREAKING CHANGES (optional). Use "|" to break new line:\n',
      footerPrefixSelect: 'Select the ISSUES type of changeList by this change (optional):',
      customFooterPrefix: 'Input ISSUES prefix:',
      footer: 'List any ISSUES by this change. E.g.: #31, #34:\n',
      confirmCommit: 'Are you sure you want to proceed with the commit above?',
    },
    types: [
      { value: 'feat', name: 'feat:     A new feature', emoji: ':sparkles:' },
      { value: 'fix', name: 'fix:      A bug fix', emoji: ':bug:' },
      { value: 'docs', name: 'docs:     Documentation only changes', emoji: ':memo:' },
      { value: 'style', name: 'style:    Code style changes (white-space, formatting)', emoji: ':lipstick:' },
      { value: 'refactor', name: 'refactor: A code change that neither fixes a bug nor adds a feature', emoji: ':recycle:' },
      { value: 'perf', name: 'perf:     A code change that improves performance', emoji: ':zap:' },
      { value: 'test', name: 'test:     Adding missing tests or correcting existing tests', emoji: ':white_check_mark:' },
      { value: 'build', name: 'build:    Changes that affect the build system or dependencies', emoji: ':package:' },
      { value: 'ci', name: 'ci:       CI/CD configuration changes', emoji: ':ferris_wheel:' },
      { value: 'chore', name: "chore:    Other changes that don't modify src or test files", emoji: ':hammer:' },
      { value: 'revert', name: 'revert:   Reverts a previous commit', emoji: ':rewind:' },
    ],
    useEmoji: false,
    emojiAlign: 'center',
    allowCustomScopes: true,
    allowEmptyScopes: true,
    breaklineNumber: 100,
    breaklineChar: '|',
    allowBreakingChanges: ['feat', 'fix'],
    confirmColorize: true,
  },
})
